@import '~@stoplight/ui-kit/styles/common/utils';
@import '~@stoplight/ui-kit/styles/common/theme';

$tree-row-height: 30px !default;
$tree-icon-spacing: ($tree-row-height - 16) / 2 !default;

.TreeList {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: inherit;
  font-size: get-font-size(base);

  * {
    &,
    &::before,
    &::after {
      box-sizing: border-box;
    }
  }

  > div > div {
    // overrides react-window's css style
    will-change: scroll-position !important;
  }

  &.striped {
    .TreeListItem:nth-child(odd) {
      background: rgba(get-color(gray, 4), 0.15);
    }
  }

  .#{$ns}-dark & {
    color: #f5f8fa;

    &.striped {
      .TreeListItem:nth-child(odd) {
        background: rgba(#ced9e0, 0.15);
      }
    }
  }
}

.TreeListItem {
  white-space: nowrap;
  display: flex;
  align-items: center;
  cursor: pointer;

  &:hover {
    background-color: rgba(get-color(gray, 4), 0.3) !important;
    cursor: pointer;
  }

  &:active {
    background-color: rgba(get-color(gray, 4), 0.4) !important;
  }

  &.TreeListItem-highlighted {
    background-color: rgba(get-color(gray, 4), 0.4) !important;
  }

  @for $i from 0 through 20 {
    &.TreeListItemLevel-#{$i} {
      padding-left: (30- $tree-icon-spacing) * $i;
    }
  }

  .#{$ns}-dark & {
    &:hover {
      background-color: rgba(#5c7080, 0.3) !important;
    }

    &:active {
      background-color: rgba(#5c7080, 0.4) !important;
    }

    &.TreeListItem-highlighted {
      background-color: rgba(#5c7080, 0.4) !important;
    }
  }
}

.TreeListItemCaret {
  cursor: pointer;
  color: #5c7080;
  padding: $tree-icon-spacing;
  min-width: $tree-row-height;
  display: flex;
  justify-content: center;
  align-items: center;
  .#{$ns}-dark & {
    color: #bfccd6;
  }
}

.TreeListItemIcon {
  color: #5c7080;
  position: relative;
  margin-right: $tree-icon-spacing;
  .#{$ns}-dark & {
    color: #bfccd6;
  }
}

.TreeListItemLabel {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  flex: 1 1 auto;
  position: relative;
  user-select: none;

  // prevents spans from interfering with text overflows (e.g. when Tooltips are used in labels)
  span {
    display: inline;
  }
}
